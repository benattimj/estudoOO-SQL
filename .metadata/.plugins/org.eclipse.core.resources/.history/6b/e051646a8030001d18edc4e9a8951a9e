package app;


import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.HashMap;
import java.util.Map;

import db.DB;
import entities.Order;
import entities.OrderStatus;
import entities.Produto;

public class Program {

	public static void main(String[] args) throws SQLException {
				
		Connection conn = DB.getConnection();
	
		Statement st = conn.createStatement();
			
		ResultSet rs = st.executeQuery("SELECT * from tb_order "
				+ "INNER JOIN tb_order_product ON tb_order.id = tb_order_product.order_id"
				+ "INNER JOIN tb_product ON tb_product.id = tb_order_product.product_id");
			
		Map<Long, Order> map = new HashMap<>();
		Map<Long, Produto > prods = new HashMap<>();
		while (rs.next()) {
		
			Long orderId = rs.getLong("order_id");
			if (map.get(orderId) == null) {

				Order order = instantiateOrder(rs);
				map.put(orderId, order);				
				}
			
			Long produtoId = rs.getLong("product_id");
			if (prods.get(produtoId) ==null) {
			Produto p = instantiateProduto(rs);
			prods.put(produtoId, p);
		
			}
			
			map.get(orderId).getProdutos().add(prods.get(produtoId));
		
		}
		
	}

	private static Order instantiateOrder(ResultSet rs) throws SQLException {
		Order order = new Order();
		order.setId(rs.getLong("id"));
		order.setLatitude(rs.getDouble("latitude"));
		order.setLongitude(rs.getDouble("longitude"));
		order.setMoment(rs.getTimestamp("moment").toInstant());
		order.setStatus(OrderStatus.values()[rs.getInt("status")]);
		return order;
	}
	
		
			private static Produto instantiateProduto(ResultSet rs) throws SQLException {
				Produto p = new Produto();
				p.setId(rs.getLong("product_id"));
				p.setDescription(rs.getString("description"));
				p.setName(rs.getString("name"));
				p.setImageUri(rs.getString("image_uri"));
				p.setPrice(rs.getDouble("Price"));			
				return p;
			}
	
	
}